<div class="row">
	<div class="col-md-6 dirContainer">
		<h2>Local Files</h2>
		<button class="hiddenFiles btn btn-default">Show Hidden Files</button>
		<div id="localFiles" class="dirContent">
		</div>
	</div>
	<div class="col-md-6 dirContainer">
		<h2>Azure Storage</h2>
		<div id="azureStorage" class="dirContent">

		</div>
		<div id="spinner" class="spinner" style="display:none;">
   			<img id="img-spinner" src="/img/spinner.gif" alt="Loading"/>
			</div>
	</div>
</div>

<script>
	// hooray for peek!  the ever-loving companion of pop
	Array.prototype.peek = function(){
		if( this.length===0 ) return null;
		return this[this.length-1];
	};

	function getPathStack( $target ) {
		var $root = $target.closest( '.fileDropRoot' );
		if( !$root.data('pathStack') ) $root.data('pathStack',[]);
		return $root.data('pathStack');
	}

	function azureDrop( evt, ui ) {
		var $target = $(evt.target);
		var $root = $target.closest( '.fileDropRoot' );
		$root.find().removeClass('dropHint');
		if( ui.draggable.hasClass('dir') ) {
			$target.removeClass( 'dropHint' );
			alert( 'Transferring directories currently not supported.' );
			return;
		}
		var pathStack = getPathStack( $target );
		if( pathStack.peek()!==$target.data('path') ) return;		// we're not the innermost drop target; nothing to do
		var src = $(ui.draggable).data('path');
		var dstDir = pathStack.pop();
		if( dstDir === '/' ) {
			$target.removeClass( 'dropHint' );
			alert( 'You must transfer files into a container.' );
			return;
		}
		var dst = dstDir + src.match(/\/([^/]+)$/)[1];
		pathStack = [];	// reset the path stack
		$("#spinner").show();
		$.ajax( '/api/azure/upload?src=' + encodeURIComponent(src) + '&dst=' + encodeURIComponent(dst), {success:function(){
				refreshAzure( $root.data('path') );
				$("#spinner").hide();
			}
		});
	}

	function dropTargetOver( evt, ui ) {
		$target = $(evt.target);
		getPathStack( $target ).push( $target.data('path') );
		$target.addClass( 'dropHint' );
		}

	function dropTargetOut( evt, ui ) {
		$target = $(evt.target);
		// TODO: this is not working reliably.  it functions, but doing some console logging is not reassuring
		getPathStack( $target ).pop();
		$target.removeClass( 'dropHint' );
	}

	function refreshDragDrop() {
		$('#localFiles .dir-entry').draggable({
			helper: 'clone'
		});
		// we have to re-define the droppable every time as well
		$('#azureStorage .fileDropRoot').droppable({
			accept: '.dir-entry',
			drop: azureDrop,
			over: dropTargetOver,
			out: dropTargetOut,
		});
		$('#azureStorage .fileDropRoot .dir-entry.dir').droppable({
			accept: '.dir-entry',
			drop: azureDrop,
			over: dropTargetOver,
			out: dropTargetOut,
		});
	}

	function refreshLocal(path) {
				if( !path ) path = '~';

		$('#localFiles').load( '/partials/local/dir?path=' + encodeURIComponent(path), null, function() {
			refreshDragDrop();
		} );
	}

	function refreshAzure(path) {
		if( !path ) path = '/';
		$('#azureStorage').load( '/partials/azure/dir?path=' + encodeURIComponent(path), null, function() {
			refreshDragDrop();
		} );
	}

	$(document).ready(function() {
		'use strict';

		refreshLocal();
		refreshAzure();

		$('#localFiles').on('click','a',function(){
			var path = $(this).data('path');
			if( path ) refreshLocal(path);
		});

		$('#azureStorage').on('click','a',function(){
			var action = $(this).data('action');
			var path = $(this).data('path');
			var $root = $(this).closest( '.fileDropRoot' );
			if( action==='delete' ) {
				console.log( 'deleting ' + path );
				if( path ) {
					$.ajax( '/api/azure/delete?path=' + encodeURIComponent(path), {success:function(){
						refreshAzure( $root.data('path') );
					}});
				}
			} else {
				if( path ) refreshAzure(path);
			}
		});

		$('#localFiles').on('click','a',function(){
			var action = $(this).data('action');
			var path = $(this).data('path');
			var $root = $(this).closest( '.fileDropRoot' );
			if( action==='delete' ) {
				if( confirm('This will delete your file from your computer and cannot be reversed. Are you sure?')) {
					console.log( 'deleting ' + path );
					if( path ) {
						$.ajax( '/api/local/delete?path=' + encodeURIComponent(path), {
							success:function(){
								refreshLocal( $root.data('path'));
							},
							completed:function(){
								alert('hello hello');
							}
						});
					}
				}
			} else {
				if( path ) refreshLocal(path);
			}
		});

		$('.hiddenFiles').click(function(){
			if($('[data-hidden="true"]').is(":hidden")){
		  	$(".hiddenFiles").text("Hide Hidden Files")
			} else {
			  $(".hiddenFiles").text("Show Hidden Files")
			}
	  	$('[data-hidden="true"]').slideToggle();
		});

		$('.refresh-azure').click(function(){
			var name = window.location.pathname;
			$.get( name, function( data ) {
  			refreshAzure();
			});
		});
	});

</script>
